// Generated by PureGirGen.hs
"use strict";

const Variant = imports.gi.GLib.Variant;

exports.new_boolean = v => () => Variant.new_boolean(v)
exports.new_byte = v => () => Variant.new_byte(v)
exports.new_bytestring = v => () => Variant.new_bytestring(v)
exports.new_double = v => () => Variant.new_double(v)
exports.new_handle = v => () => Variant.new_handle(v)
exports.new_int16 = v => () => Variant.new_int16(v)
exports.new_int32 = v => () => Variant.new_int32(v)
exports.new_int64 = v => () => Variant.new_int64(v)
exports.new_object_path = v => () => Variant.new_object_path(v)
exports.new_signature = v => () => Variant.new_signature(v)
exports.new_string = v => () => Variant.new_string(v)
exports.new_uint16 = v => () => Variant.new_uint16(v)
exports.new_uint32 = v => () => Variant.new_uint32(v)
exports.new_uint64 = v => () => Variant.new_uint64(v)
exports.new_variant = v => () => Variant.new_variant(v)
exports.byteswap = v => () => v.byteswap()
exports.get_boolean = v => () => v.get_boolean()
exports.get_byte = v => () => v.get_byte()
exports.get_bytestring = v => () => v.get_bytestring()
exports.get_double = v => () => v.get_double()
exports.get_handle = v => () => v.get_handle()
exports.get_int16 = v => () => v.get_int16()
exports.get_int32 = v => () => v.get_int32()
exports.get_int64 = v => () => v.get_int64()
exports.get_maybe = v => () => v.get_maybe()
exports.get_normal_form = v => () => v.get_normal_form()
exports.get_size = v => () => v.get_size()
exports.get_type_string = v => () => v.get_type_string()
exports.get_uint16 = v => () => v.get_uint16()
exports.get_uint32 = v => () => v.get_uint32()
exports.get_uint64 = v => () => v.get_uint64()
exports.get_variant = v => () => v.get_variant()
exports.hash = v => () => v.hash()
exports.is_container = v => () => v.is_container()
exports.is_floating = v => () => v.is_floating()
exports.is_normal_form = v => () => v.is_normal_form()
exports.n_children = v => () => v.n_children()
exports.ref = v => () => v.ref()
exports.ref_sink = v => () => v.ref_sink()
exports.take_ref = v => () => v.take_ref()
exports.unref = v => () => v.unref()
exports.is_object_path = v => () => v.is_object_path()
exports.is_signature = v => () => v.is_signature()
